package mods.minecessity;import java.util.Random;import net.minecraft.block.Block;import net.minecraft.block.material.Material;import net.minecraft.entity.player.EntityPlayer;import net.minecraft.item.Item;import net.minecraft.item.ItemBlock;import net.minecraft.item.ItemFood;import net.minecraft.item.ItemStack;import net.minecraft.world.World;public class Y_BlockCeilLamp extends Block{    protected Y_BlockCeilLamp(int i)    {		super(i,Material.ground);		setTickRandomly(true);		//blockIndexInTexture = Block.planks.blockIndexInTexture;    }		public int tickRate()    {        return 1;    }		public boolean renderAsNormalBlock()    {        return false;    }	    public int getRenderType()    {        return Minecessity.rendererCeilLamp;    }	    public boolean isOpaqueCube()    {        return false;    }		public void randomDisplayTick(World world, int i, int j, int k, Random random)    {		world.notifyBlocksOfNeighborChange(i,j,k,blockID);		int meta = world.getBlockMetadata(i,j,k);    }		public void onBlockClicked(World world, int i, int j, int k, EntityPlayer entityplayer)    {		int meta = world.getBlockMetadata(i,j,k);				if(meta<7)meta++;		else meta=0;				world.setBlockMetadataWithNotify(i,j,k,meta,3);		if(meta==0) blockIndexInTexture = Block.planks.blockIndexInTexture;		if(meta==1 && !world.isAirBlock(i,j-1,k))blockIndexInTexture = Block.blocksList[world.getBlockId(i,j-1,k)].blockIndexInTexture;		if(meta==2 && !world.isAirBlock(i,j+1,k))blockIndexInTexture = Block.blocksList[world.getBlockId(i,j+1,k)].blockIndexInTexture;		if(meta==3 && !world.isAirBlock(i-1,j,k))blockIndexInTexture = Block.blocksList[world.getBlockId(i-1,j,k)].blockIndexInTexture;		if(meta==4 && !world.isAirBlock(i+1,j,k))blockIndexInTexture = Block.blocksList[world.getBlockId(i+1,j,k)].blockIndexInTexture;		if(meta==5 && !world.isAirBlock(i,j,k-1))blockIndexInTexture = Block.blocksList[world.getBlockId(i,j,k-1)].blockIndexInTexture;		if(meta==6 && !world.isAirBlock(i,j,k+1))blockIndexInTexture = Block.blocksList[world.getBlockId(i,j,k+1)].blockIndexInTexture;		if(meta==7)		{			ItemStack item = entityplayer.inventory.getCurrentItem();			if(item!=null && item.getItem() instanceof ItemBlock)			{				int currentHoldingID = item.itemID;				blockIndexInTexture = Block.blocksList[currentHoldingID].blockIndexInTexture;			}		}		world.notifyBlocksOfNeighborChange(i,j,k,blockID);    }		public boolean blockActivated(World world, int i, int j, int k, EntityPlayer entityplayer)    {		ItemStack stack = entityplayer.inventory.getCurrentItem();		if(stack!=null)		{			Item item = stack.getItem();			if(item instanceof ItemFood)			{				int x = ((ItemFood)item).getHealAmount();				entityplayer.heal(x*2);				stack.stackSize--;				return false;			}		}        return true;    }		public int idDropped(int i, Random random)    {        return Minecessity.ceilLampItem.itemID;    }}